slides:
  -
    content: |
      # Transitions
      ###### Intermediate HTML and CSS<!-- .element: class="short-title" -->

    options:
      class: section-card

  -
    content: |

      #### Allow property changes in CSS values to<br>occur smoothly over a specified duration

  -
    content: |
      #### Create stunning visual effects<br>without any JavaScript

  -
    content: |
      ## Transition Triggers

      - `:hover`
      - `:active`
      - `:focus`
      - `:target`
      - Changes to the selectors

  -
    content: |
      ## Transition Properties

      - `transition-property`
      - `transition-duration`
      - `transition-delay`
      - `transition-timing-function`

  -
    content: |
      ## `transition-property`
      <hr>

      The names of CSS properties to transition.

      ```
      .example1 { transition-property: background-color; }
      ```

      Set to `all` to transition all CSS properties.

      ```
      .example2 { transition-property: all; }
      ```

  -
    content: |
      ### Transition Examples<br><small>[paz.cc/gdi-html/animated](http://paz.cc/gdi-html/animated)</small>

      ### Transitionable Properties List<br><small>[paz.cc/gdi-html/transition](http://paz.cc/gdi-html/transition)</small>

  -
    content: |
      ## `transition-duration`
      <hr>

      The number of seconds or milliseconds a<br>transition animation should take to complete.

      ```
      .example1 { transition-duration: 2s; }
      ```
      <style>
        .transition-duration {transition: all linear 2s; height: 2em; width: 2em; background-color: deeppink;}
        .transition-duration:hover {transform: scale(4) rotate(90deg); background-color: dodgerblue;}
      </style>
      <div class="transition-duration"></div>

  -
    content: |
      ## `transition-delay`
      <hr>

      Delay the start of transitions from the moment a trigger occurs.

      ```
      .example2 { transition-delay: 1s; }
      ```
      <style>
        .transition-delay {transition: all linear 2s 1s; height: 2em; width: 2em; background-color: deeppink;}
        .transition-delay:hover {transform: scale(4) rotate(90deg); background-color: dodgerblue;}
      </style>
      <div class="transition-delay"></div>


  -
    content: |
      ## `transition-timing-function`
      <hr>

      Provides variation in how the transition plays out.

      ```
      .example { transition-timing-function: ease; }
      ```
      <style>
        .transition-timing { transition: all 2s; height: 2em; width: 2em; background-color: deeppink; margin:auto;}
        .transition-timing:hover { transform: scale(4) rotate(90deg); background-color: dodgerblue;}
        .transition-timing.ease { transition-timing-function: ease; }
        .transition-timing.linear { transition-timing-function: linear; }
        .transition-timing.ease-in { transition-timing-function: ease-in; }
        .transition-timing.ease-out { transition-timing-function: ease-out; }
        .transition-timing.cubic-bezier { transition-timing-function: cubic-bezier(0.16,0.83,0.69,1.32); }
      </style>

      <table>
        <tr>
          <th>`ease`</th>
          <th>`linear`</th>
          <th>`ease-in`</th>
          <th>`ease-out`</th>
          <th>`ease-in-out`</th>
          <th>`cubic-bezier`</th>
        </tr>
        <tr>
          <td><div class="transition-timing ease"></div></td>
          <td><div class="transition-timing linear"></div></td>
          <td><div class="transition-timing ease-in"></div></td>
          <td><div class="transition-timing ease-out"></div></td>
          <td><div class="transition-timing ease-in-out"></div></td>
          <td><div class="transition-timing cubic-bezier"></div></td>
        </tr>
      </table>

      [cubic-bezier.com](http://cubic-bezier.com)

  -
    content: |
      ### That’s a lot to remember right?

      Remember to reference the web dictionary, [mdn.io](http://mdn.io). You don’t<br>need to remember everything if you know where to find it.

  -
    content: |
      ### Let’s Develop It!
      <hr>

      Pick a transition property and apply it to an element.

      <span>**Hint:** The transition will only work if it has a pseudo class, like `:hover`</span>
